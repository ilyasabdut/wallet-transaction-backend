name: CI/CD Pipeline

env:
  APP_ENV: ${{ vars.APP_ENV }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
  SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
  SENTRY_LOG_LEVEL: debug
  SENTRY_URL: https://sentry.io/
  deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: render

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Build the application
      run: npm run build

    - name: Archive build artifacts
      run: |
        mkdir -p build-artifacts
        cp -R dist/ node_modules/ package.json package-lock.json build-artifacts/
        tar -czvf build-artifacts.tar.gz build-artifacts

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: build-artifacts.tar.gz

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: .

    - name: Extract build artifacts
      run: tar -xzvf build-artifacts.tar.gz

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test -- --coverage

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: .

    - name: Extract build artifacts
      run: tar -xzvf build-artifacts.tar.gz

    - name: Install dependencies
      run: npm install

    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: $SENTRY_AUTH_TOKEN
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      with:
        environment: production

    - name: Deploy to server
      run: |
        curl "$deploy_url"